package com.ems.common.model;

import com.jfinal.plugin.activerecord.ActiveRecordPlugin;

/**
 * Generated by JFinal, do not modify this file.
 * <pre>
 * Example:
 * public void configPlugin(Plugins me) {
 *     ActiveRecordPlugin arp = new ActiveRecordPlugin(...);
 *     _MappingKit.mapping(arp);
 *     me.add(arp);
 * }
 * </pre>
 */
public class _MappingKit {
	
	public static void mapping(ActiveRecordPlugin arp) {
		arp.addMapping("cthy_devices_info", "deviceNo", CthyDevicesInfo.class);
		arp.addMapping("eer_base", "id", EerBase.class);
		arp.addMapping("eer_coal", "id", EerCoal.class);
		arp.addMapping("eer_tubenet", "id", EerTubenet.class);
		arp.addMapping("eer_unit", "id", EerUnit.class);
		arp.addMapping("eer_userinfo_temp", "id", EerUserinfoTemp.class);
		arp.addMapping("ems_account", "accountCode", EmsAccount.class);
		// Composite Primary Key order: accountCode,type
		arp.addMapping("ems_account_extend", "accountCode,type", EmsAccountExtend.class);
		arp.addMapping("ems_company", "ID", EmsCompany.class);
		arp.addMapping("ems_device", "ID", EmsDevice.class);
		arp.addMapping("ems_elecgas_group", "ID", EmsElecgasGroup.class);
		arp.addMapping("ems_report", "ID", EmsReport.class);
		arp.addMapping("ems_taskconfig", "Id", EmsTaskconfig.class);
		// Composite Primary Key order: type,unitId
		arp.addMapping("ems_unit", "type,unitId", EmsUnit.class);
		arp.addMapping("ems_unitcalcgroup", "id", EmsUnitcalcgroup.class);
		arp.addMapping("ems_user", "ID", EmsUser.class);
		arp.addMapping("fee_item", "Id", FeeItem.class);
		arp.addMapping("userinfo", "Id", Userinfo.class);
		arp.addMapping("usersetting", "id", Usersetting.class);
		arp.addMapping("usertoken", "Id", Usertoken.class);
		arp.addMapping("warning_info", "id", WarningInfo.class);
		arp.addMapping("warning_setting", "id", WarningSetting.class);
		arp.addMapping("warter_meter_input", "did", WarterMeterInput.class);
		arp.addMapping("xl_account", "id", XlAccount.class);
		arp.addMapping("xl_aid_did", "id", XlAidDid.class);
		arp.addMapping("xl_analog_transfer", "analogid", XlAnalogTransfer.class);
		arp.addMapping("xl_analogdoc", "id", XlAnalogdoc.class);
		arp.addMapping("xl_datacode", "id", XlDatacode.class);
		arp.addMapping("xl_daydata", "id", XlDaydata.class);
		arp.addMapping("xl_daydata_e", "id", XlDaydataE.class);
		arp.addMapping("xl_devices", "id", XlDevices.class);
		arp.addMapping("xl_devices_current", "id", XlDevicesCurrent.class);
		arp.addMapping("xl_devices_e", "id", XlDevicesE.class);
		arp.addMapping("xl_electric", "id", XlElectric.class);
		arp.addMapping("xl_groupanalog", "id", XlGroupanalog.class);
		arp.addMapping("xl_monthdata", "id", XlMonthdata.class);
		arp.addMapping("xl_unitcalcgroup", "id", XlUnitcalcgroup.class);
		arp.addMapping("xl_unitlink", "id", XlUnitlink.class);
		arp.addMapping("xl_unitlink_e", "id", XlUnitlinkE.class);
		arp.addMapping("xl_units", "id", XlUnits.class);
		arp.addMapping("xl_zhzt_counter", "id", XlZhztCounter.class);
		arp.addMapping("xl_zhzt_user", "customer", XlZhztUser.class);
		arp.addMapping("xl_zhzt_warter", "counterId", XlZhztWarter.class);
	}
}

